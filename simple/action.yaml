name: Pull Request command
description: "pr-command is an action that enables you to run commands on your pull requests using comments."
inputs:
  token:
    description: "Authentication token for GitHub repository"
    required: true
  pr-comment:
    description: "Comment that the bot should react on"
    required: true
  run:
    description: "Bash command to be run when the bot is triggered"
    required: false
  commit-message:
    description: "Commit message to be used when committing"
    required: false
  write-comment:
    description: "Comment that the bot should write on the pull-request"
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        if [[ "${{github.event.issue.pull_request && startsWith(github.event.comment.body, inputs.pr-comment)}}" == "false" ]]; then
          echo "should_run=false" >> $GITHUB_OUTPUT
        else
          echo "should_run=true" >> $GITHUB_OUTPUT
        fi
      id: check
      shell: bash

    # Put rocket on the comment to mark that it has started adding screenshots
    - name: React with Rocket
      uses: actions/github-script@v7
      if: ${{ steps.check.outputs.should_run == 'true' }}
      with:
        github-token: ${{ inputs.token }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'rocket'
          });

    - name: Checkout repository
      uses: actions/checkout@v4
      if: ${{ steps.check.outputs.should_run == 'true' }}
      with:
        token: ${{ inputs.token }}

    - name: Run command
      if: ${{ steps.check.outputs.should_run == 'true' && inputs.run }}
      shell: bash
      run: ${{ inputs.run }}

    - name: Commit changes (if any)
      if: ${{ steps.check.outputs.should_run == 'true' && inputs.commit-message }}
      shell: bash
      run: |
        git config user.name github-actions
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        git add .
        git commit -m "${{ inputs.commit-message }}" || true
        git push --force-with-lease

    - name: Write comment
      uses: actions/github-script@v7
      if: ${{ steps.check.outputs.should_run == 'true' && inputs.write-comment }}
      env:
        COMMENT: ${{ inputs.write-comment }}
      with:
        github-token: ${{ inputs.token }}
        script: |
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.issue.number,
            body: `${process.env.COMMENT}`
          });

    # Put a hooray on the comment to mark that it has been updated
    - name: React with hooray
      uses: actions/github-script@v7
      if: ${{ steps.check.outputs.should_run == 'true' }}
      with:
        github-token: ${{ inputs.token }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'hooray'
          });

    # Put a confused on the comment to mark that it has failed
    - name: 'Failure: React with confused'
      if: ${{ failure() && steps.check.outputs.should_run == 'true' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'confused'
          });
